line 1. ".scope0" -- 	+	pattern = ^.scope\d{1,}$
line 1. "str a" -- 	+	pattern = ^(str) +(.+)$
line 1. "lea eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 2. "movi ebx, 1" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 3. "mov [eax], ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 4. "while0:" -- 	+	pattern = ^(while\d{1,}):$
line 4. "movi eax, 1" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 5. "movi ebx, 4" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 6. "lsh eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 7. "ld ebx, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 8. "cmp ebx, eax" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 9. "jl jl_true0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 10. "movi ebx, 0" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 11. "jmp jl_false0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 12. "jl_true0:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 12. "movi ebx, 1" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 13. "jl_false0:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 13. "test ebx, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 14. "jz while_0_exit" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 15. ".scope1" -- 	+	pattern = ^.scope\d{1,}$
line 15. "ld eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 16. "movi ebx, 2" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 17. "mod eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 18. "movi ebx, 0" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 19. "cmp eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 20. "je je_true0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 21. "movi eax, 0" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 22. "jmp je_false0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 23. "je_true0:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 23. "movi eax, 1" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 24. "je_false0:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 24. "test eax, eax" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 25. "jz if_body_exit0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 26. ".scope2" -- 	+	pattern = ^.scope\d{1,}$
line 26. "ld eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 27. "pnt eax" -- 	+	pattern = ^(pnt|dec|inc) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 28. ".scope2_end" -- 	+	pattern = ^.scope\d{1,}_end$
line 28. "jmp if_end0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 29. "if_body_exit0:" -- 	+	pattern = ^(if_body_exit\d{1,}):?$
line 29. "ld eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 30. "movi ebx, 2" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 31. "mod eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 32. "test eax, eax" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 33. "jz if_body_exit1" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 34. ".scope2" -- 	+	pattern = ^.scope\d{1,}$
line 34. "ld eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 35. "movi ebx, 10" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 36. "mul eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 37. "pnt eax" -- 	+	pattern = ^(pnt|dec|inc) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 38. ".scope2_end" -- 	+	pattern = ^.scope\d{1,}_end$
line 38. "jmp if_end0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 39. "if_body_exit1:" -- 	+	pattern = ^(if_body_exit\d{1,}):?$
line 39. "if_end0:" -- 	+	pattern = ^(if_end\d{1,}):?$
line 39. "lea eax, a" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 40. "inc [eax]" -- 	+	pattern = ^(pnt|dec|inc) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 41. ".scope1_end" -- 	+	pattern = ^.scope\d{1,}_end$
line 41. "jmp while0" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 42. "while_0_exit:" -- 	+	pattern = ^(while_\d{1,}_exit):$
line 42. "str i" -- 	+	pattern = ^(str) +(.+)$
line 42. "lea eax, i" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 43. "movi ebx, 0" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 44. "mov [eax], ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 45. "while1:" -- 	+	pattern = ^(while\d{1,}):$
line 45. "ld eax, i" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 46. "movi ebx, 10" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 47. "cmp eax, ebx" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 48. "jl jl_true1" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 49. "movi eax, 0" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 50. "jmp jl_false1" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 51. "jl_true1:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 51. "movi eax, 1" -- 	+	pattern = ^(movi) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(-?\d{1,})$
line 52. "jl_false1:" -- 	+	pattern = ^((?:jl|jle|jg|jge|je|jne|jz)_(?:true|false)\d{1,}):?
line 52. "test eax, eax" -- 	+	pattern = ^(mov|add|sub|mul|div|mod|xor|or|and|land|lor|lsh|rsh|cmp|test) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 53. "jz while_1_exit" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 54. ".scope1" -- 	+	pattern = ^.scope\d{1,}$
line 54. "ld eax, i" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 55. "pnt eax" -- 	+	pattern = ^(pnt|dec|inc) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 56. "lea eax, i" -- 	+	pattern = ^(lea|ld) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?), *(.+)$
line 57. "inc [eax]" -- 	+	pattern = ^(pnt|dec|inc) +(\[?)(eax|ebx|ecx|edx|esi|edi|ebp|esp)(]?)$
line 58. ".scope1_end" -- 	+	pattern = ^.scope\d{1,}_end$
line 58. "jmp while1" -- 	+	pattern = ^(jl|jle|jg|jge|je|jne|jz|jmp) +(.+)$
line 59. "while_1_exit:" -- 	+	pattern = ^(while_\d{1,}_exit):$
line 59. ".scope0_end" -- 	+	pattern = ^.scope\d{1,}_end$
